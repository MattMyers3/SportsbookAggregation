// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsbookAggregation.Data;

namespace SportsbookAggregation.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GamblingSite", b =>
                {
                    b.Property<Guid>("GamblingSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamblingSiteId");

                    b.ToTable("GamblingSite");

                    b.HasData(
                        new
                        {
                            GamblingSiteId = new Guid("dab029a6-34b5-4a37-ac8a-0158052df773"),
                            Name = "Fanduel"
                        },
                        new
                        {
                            GamblingSiteId = new Guid("e3b718cd-7090-4f01-a1af-6f22fd61fd22"),
                            Name = "FoxBet"
                        },
                        new
                        {
                            GamblingSiteId = new Guid("209ad3ca-bf6f-4520-b573-51a63e62fb28"),
                            Name = "DraftKings"
                        },
                        new
                        {
                            GamblingSiteId = new Guid("5fab4388-e39a-43dc-9036-6f19da79827f"),
                            Name = "BetRivers"
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AwayTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HomeTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameLine", b =>
                {
                    b.Property<Guid>("GameLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AwayMoneyLinePayout")
                        .HasColumnType("int");

                    b.Property<int?>("AwaySpreadPayout")
                        .HasColumnType("int");

                    b.Property<double?>("CurrentOverUnder")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentSpread")
                        .HasColumnType("float");

                    b.Property<Guid>("GamblingSiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("HomeMoneyLinePayout")
                        .HasColumnType("int");

                    b.Property<int?>("HomeSpreadPayout")
                        .HasColumnType("int");

                    b.Property<double?>("OpeningOverUnder")
                        .HasColumnType("float");

                    b.Property<double?>("OpeningSpread")
                        .HasColumnType("float");

                    b.Property<int?>("OverPayOut")
                        .HasColumnType("int");

                    b.Property<int?>("UnderPayout")
                        .HasColumnType("int");

                    b.HasKey("GameLineId");

                    b.HasIndex("GamblingSiteId");

                    b.HasIndex("GameId");

                    b.ToTable("GameLine");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameResult", b =>
                {
                    b.Property<Guid>("GameResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayTeamScore")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HomeTeamScore")
                        .HasColumnType("int");

                    b.HasKey("GameResultId");

                    b.HasIndex("GameId");

                    b.ToTable("GameResult");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Sport", b =>
                {
                    b.Property<Guid>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.ToTable("Sport");

                    b.HasData(
                        new
                        {
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12"),
                            Name = "NBA"
                        },
                        new
                        {
                            SportId = new Guid("eae3790f-5a86-4b26-aa98-d4001cdb602e"),
                            Name = "NFL"
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Team", b =>
                {
                    b.Property<Guid>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mascot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId");

                    b.HasIndex("SportId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("ad270e2d-233a-4018-b6a2-a9fc01a9c6a1"),
                            Location = "Atlanta",
                            Mascot = "Hawks",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("5ee7eefc-4838-453c-b904-d49daf994c89"),
                            Location = "Boston",
                            Mascot = "Celtics",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("d782b0a1-9c26-4b84-8408-1482611b7dfc"),
                            Location = "Brooklyn",
                            Mascot = "Nets",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("5abdb10d-7059-4111-806d-1d4d272c96d4"),
                            Location = "Charlotte",
                            Mascot = "Hornets",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("0185bde9-91b4-4935-a2ed-3911a77bb619"),
                            Location = "Chicago",
                            Mascot = "Bulls",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("a44aa3b4-8943-4eed-8380-59654e428bb0"),
                            Location = "Cleveland",
                            Mascot = "Cavaliers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("79302ddf-c9a6-4254-9978-2ddd7bb5eb55"),
                            Location = "Dallas",
                            Mascot = "Mavericks",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("682d44e4-ee55-4aa9-8359-8f0f3f3f4e4f"),
                            Location = "Denver",
                            Mascot = "Nuggets",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("90de592a-2ac5-4c7d-8477-56d3e665b0f4"),
                            Location = "Detroit",
                            Mascot = "Pistons",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("eac6d008-2adb-40e4-938c-4efc0011430e"),
                            Location = "Golden State",
                            Mascot = "Warriors",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("9f97db29-1a71-41f8-bd9e-563f56644bb6"),
                            Location = "Houston",
                            Mascot = "Rockets",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("89a6695c-4289-43da-9ab3-5ce14481f0bb"),
                            Location = "Indiana",
                            Mascot = "Pacers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("336c5256-9cf7-45d9-aeed-86eb947417e5"),
                            Location = "Los Angeles",
                            Mascot = "Clippers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("5eeecbe7-8943-4715-9bdd-70b26c1a00ee"),
                            Location = "Los Angeles",
                            Mascot = "Lakers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("1b6edbe9-bdfc-4664-80f1-b69ee77fb4d1"),
                            Location = "Memphis",
                            Mascot = "Grizzlies",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("1a758a70-2365-4df3-ac70-9247bef4cfb7"),
                            Location = "Miami",
                            Mascot = "Heat",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("abc1ac4d-7b67-4a3d-b27c-6c79640c67a5"),
                            Location = "Milwaukee",
                            Mascot = "Bucks",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("2cc24391-0aa7-4527-8af7-dc0b0e34d95e"),
                            Location = "Minnesota",
                            Mascot = "Timberwolves",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("a9490907-31d7-47be-89ee-203144086c4f"),
                            Location = "New Orleans",
                            Mascot = "Pelicans",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("4931cbf4-665d-42f1-8eea-314f01b0b0c8"),
                            Location = "New York",
                            Mascot = "Knicks",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("109c83be-ac66-44fd-ac5b-81f4319f8e06"),
                            Location = "Oklahoma City",
                            Mascot = "Thunder",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("98b78113-c91c-44f8-ae18-f5c728427901"),
                            Location = "Orlando",
                            Mascot = "Magic",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("67398008-c9d6-4d40-8891-c53de788c6c2"),
                            Location = "Philadelphia",
                            Mascot = "76ers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("d486c72d-f408-4be4-85cf-1cb814214dd5"),
                            Location = "Phoenix",
                            Mascot = "Suns",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("8ba5f13e-b46a-49ce-8aec-809b5d59bad7"),
                            Location = "Portland",
                            Mascot = "Trail Blazers",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("6617f87f-3d2d-4c55-96e2-ea0a28bbbaa8"),
                            Location = "Sacramento",
                            Mascot = "Kings",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("583c443c-bb95-44c7-a222-22e419897600"),
                            Location = "San Antonio",
                            Mascot = "Spurs",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("1d2d9b56-c858-4738-b22d-4f6d882f185b"),
                            Location = "Toronto",
                            Mascot = "Raptors",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("fe06e876-dc97-4306-899e-925b6ab936ec"),
                            Location = "Utah",
                            Mascot = "Jazz",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        },
                        new
                        {
                            TeamId = new Guid("76e268e4-64c6-4fef-84d3-ef1a33f12641"),
                            Location = "Washington",
                            Mascot = "Wizards",
                            SportId = new Guid("0584d380-a494-45ab-9c28-6fd0e921da12")
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameLine", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.GamblingSite", "GamblingSite")
                        .WithMany()
                        .HasForeignKey("GamblingSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsbookAggregation.Data.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameResult", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Team", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
