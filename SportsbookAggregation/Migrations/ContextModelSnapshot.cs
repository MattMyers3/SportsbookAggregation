// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsbookAggregation.Data;

namespace SportsbookAggregation.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GamblingSite", b =>
                {
                    b.Property<byte[]>("GamblingSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("GamblingSiteId");

                    b.ToTable("GamblingSite");

                    b.HasData(
                        new
                        {
                            GamblingSiteId = new byte[] { 35, 18, 195, 125, 245, 247, 154, 77, 134, 188, 30, 168, 107, 56, 71, 192 },
                            Name = "Fanduel"
                        },
                        new
                        {
                            GamblingSiteId = new byte[] { 163, 170, 13, 209, 13, 158, 177, 67, 186, 85, 175, 149, 75, 20, 203, 173 },
                            Name = "FoxBet"
                        },
                        new
                        {
                            GamblingSiteId = new byte[] { 125, 90, 93, 145, 115, 203, 218, 72, 173, 40, 22, 134, 209, 202, 67, 155 },
                            Name = "DraftKings"
                        },
                        new
                        {
                            GamblingSiteId = new byte[] { 226, 154, 81, 224, 110, 117, 163, 70, 143, 11, 222, 34, 240, 234, 198, 79 },
                            Name = "BetRivers"
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Game", b =>
                {
                    b.Property<byte[]>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AwayTeamId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("HomeTeamId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("GameId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameLine", b =>
                {
                    b.Property<byte[]>("GameLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int?>("AwayMoneyLinePayout")
                        .HasColumnType("int");

                    b.Property<int?>("AwaySpreadPayout")
                        .HasColumnType("int");

                    b.Property<double?>("CurrentOverUnder")
                        .HasColumnType("double");

                    b.Property<double?>("CurrentSpread")
                        .HasColumnType("double");

                    b.Property<byte[]>("GamblingSiteId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("GameId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int?>("HomeMoneyLinePayout")
                        .HasColumnType("int");

                    b.Property<int?>("HomeSpreadPayout")
                        .HasColumnType("int");

                    b.Property<double?>("OpeningOverUnder")
                        .HasColumnType("double");

                    b.Property<double?>("OpeningSpread")
                        .HasColumnType("double");

                    b.Property<int?>("OverPayOut")
                        .HasColumnType("int");

                    b.Property<int?>("UnderPayout")
                        .HasColumnType("int");

                    b.HasKey("GameLineId");

                    b.HasIndex("GamblingSiteId");

                    b.HasIndex("GameId");

                    b.ToTable("GameLine");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameResult", b =>
                {
                    b.Property<byte[]>("GameResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("AwayTeamScore")
                        .HasColumnType("int");

                    b.Property<byte[]>("GameId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("HomeTeamScore")
                        .HasColumnType("int");

                    b.HasKey("GameResultId");

                    b.HasIndex("GameId");

                    b.ToTable("GameResult");
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Sport", b =>
                {
                    b.Property<byte[]>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("SportId");

                    b.ToTable("Sport");

                    b.HasData(
                        new
                        {
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 },
                            Name = "NBA"
                        },
                        new
                        {
                            SportId = new byte[] { 125, 36, 119, 168, 185, 143, 71, 71, 135, 244, 242, 109, 102, 11, 250, 66 },
                            Name = "NFL"
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Team", b =>
                {
                    b.Property<byte[]>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Mascot")
                        .HasColumnType("text");

                    b.Property<byte[]>("SportId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("TeamId");

                    b.HasIndex("SportId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamId = new byte[] { 95, 29, 237, 149, 86, 42, 81, 73, 160, 114, 144, 52, 82, 130, 197, 207 },
                            Location = "Atlanta",
                            Mascot = "Hawks",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 101, 120, 23, 10, 233, 203, 98, 67, 172, 75, 227, 36, 79, 210, 57, 193 },
                            Location = "Boston",
                            Mascot = "Celtics",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 233, 171, 211, 80, 180, 143, 3, 71, 173, 199, 31, 149, 5, 200, 143, 1 },
                            Location = "Brooklyn",
                            Mascot = "Nets",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 54, 9, 215, 49, 48, 27, 131, 69, 179, 48, 119, 52, 34, 173, 45, 53 },
                            Location = "Charlotte",
                            Mascot = "Hornets",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 145, 224, 109, 115, 72, 169, 122, 70, 134, 70, 179, 253, 207, 237, 226, 66 },
                            Location = "Chicago",
                            Mascot = "Bulls",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 177, 188, 171, 124, 168, 162, 162, 76, 180, 28, 140, 104, 190, 2, 178, 69 },
                            Location = "Cleveland",
                            Mascot = "Cavaliers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 17, 179, 14, 219, 183, 117, 214, 72, 175, 124, 254, 243, 35, 153, 211, 58 },
                            Location = "Dallas",
                            Mascot = "Mavericks",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 246, 184, 129, 18, 117, 43, 244, 74, 151, 192, 54, 168, 177, 246, 198, 26 },
                            Location = "Denver",
                            Mascot = "Nuggets",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 116, 148, 204, 12, 188, 131, 82, 65, 177, 172, 79, 51, 244, 89, 197, 85 },
                            Location = "Detroit",
                            Mascot = "Pistons",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 97, 64, 173, 24, 225, 228, 188, 66, 131, 62, 105, 152, 89, 194, 172, 100 },
                            Location = "Golden State",
                            Mascot = "Warriors",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 40, 145, 156, 66, 91, 231, 135, 79, 189, 15, 80, 212, 56, 99, 139, 72 },
                            Location = "Houston",
                            Mascot = "Rockets",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 133, 65, 223, 100, 150, 242, 33, 76, 145, 215, 77, 35, 26, 105, 208, 249 },
                            Location = "Indiana",
                            Mascot = "Pacers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 220, 46, 125, 97, 144, 234, 175, 65, 159, 99, 205, 88, 68, 29, 247, 73 },
                            Location = "Los Angeles",
                            Mascot = "Clippers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 145, 108, 116, 153, 125, 144, 14, 71, 150, 226, 139, 202, 109, 209, 185, 51 },
                            Location = "Los Angeles",
                            Mascot = "Lakers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 119, 25, 7, 253, 3, 138, 179, 71, 165, 145, 234, 120, 158, 209, 14, 82 },
                            Location = "Memphis",
                            Mascot = "Grizzlies",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 51, 33, 149, 146, 93, 80, 86, 68, 162, 63, 211, 81, 138, 93, 193, 181 },
                            Location = "Miami",
                            Mascot = "Heat",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 230, 120, 84, 93, 215, 85, 0, 79, 165, 68, 168, 157, 56, 78, 114, 216 },
                            Location = "Milwaukee",
                            Mascot = "Bucks",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 136, 39, 148, 225, 115, 244, 7, 79, 172, 141, 78, 76, 211, 184, 233, 187 },
                            Location = "Minnesota",
                            Mascot = "Timberwolves",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 29, 21, 251, 114, 239, 231, 145, 66, 172, 220, 23, 51, 23, 142, 184, 12 },
                            Location = "New Orleans",
                            Mascot = "Pelicans",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 111, 46, 74, 149, 194, 91, 8, 72, 131, 197, 158, 186, 102, 156, 141, 123 },
                            Location = "New York",
                            Mascot = "Knicks",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 47, 59, 50, 19, 98, 186, 25, 74, 138, 84, 95, 133, 95, 79, 59, 211 },
                            Location = "Oklahoma City",
                            Mascot = "Thunder",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 232, 155, 246, 218, 24, 46, 71, 76, 165, 202, 71, 27, 44, 155, 150, 82 },
                            Location = "Orlando",
                            Mascot = "Magic",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 216, 54, 126, 254, 206, 101, 214, 75, 162, 45, 134, 157, 133, 131, 91, 136 },
                            Location = "Philadelphia",
                            Mascot = "76ers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 254, 235, 50, 102, 179, 216, 191, 69, 135, 139, 38, 86, 224, 75, 212, 231 },
                            Location = "Phoenix",
                            Mascot = "Suns",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 23, 16, 181, 220, 184, 129, 195, 64, 166, 170, 149, 172, 166, 116, 215, 172 },
                            Location = "Portland",
                            Mascot = "Trail Blazers",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 218, 89, 240, 100, 227, 10, 222, 65, 140, 0, 107, 92, 199, 216, 250, 243 },
                            Location = "Sacramento",
                            Mascot = "Kings",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 32, 64, 120, 104, 187, 95, 220, 75, 166, 243, 170, 197, 79, 14, 23, 240 },
                            Location = "San Antonio",
                            Mascot = "Spurs",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 77, 38, 162, 83, 113, 116, 160, 65, 171, 40, 59, 169, 146, 105, 219, 196 },
                            Location = "Toronto",
                            Mascot = "Raptors",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 178, 97, 255, 146, 32, 249, 132, 72, 147, 194, 66, 246, 83, 231, 89, 22 },
                            Location = "Utah",
                            Mascot = "Jazz",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        },
                        new
                        {
                            TeamId = new byte[] { 150, 239, 133, 221, 255, 208, 125, 67, 188, 185, 124, 55, 215, 130, 202, 16 },
                            Location = "Washington",
                            Mascot = "Wizards",
                            SportId = new byte[] { 103, 151, 70, 37, 84, 213, 213, 73, 142, 83, 188, 121, 141, 20, 123, 76 }
                        });
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameLine", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.GamblingSite", "GamblingSite")
                        .WithMany()
                        .HasForeignKey("GamblingSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsbookAggregation.Data.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.GameResult", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsbookAggregation.Data.Models.Team", b =>
                {
                    b.HasOne("SportsbookAggregation.Data.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
